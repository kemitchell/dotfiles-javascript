#!/bin/sh
set -e

if [ -z "$1" ]; then
  echo "Usage: <package>"
  exit 1
fi

for package in "$@"; do
  regularDep=$(cat package.json | json "dependencies['$package']")
  devDep=$(cat package.json | json "devDependencies['$package']")

  if [ "$devDep" ]; then
    echo "$package is a development dependency."
    flag='--save-dev'
  else
    if [ "$regularDep" ]; then
      echo "$package is a production dependency."
      flag='--save-prod'
    else
      echo "$package is not a depencency!"
      exit 1
    fi
  fi

  latest=$(npm view "$package" version)
  range="^$latest"

  echo "Latest $package is $latest."

  echo -n "Installing ... "
  npm install --quiet --no-audit --no-fund "$flag" "$package@$range"
  echo "Done."


  git add package.json >/dev/null 2>&1
  if [ -f npm-shrinkwrap.json ]; then
    npm shrinkwrap
    git add npm-shrinkwrap.json >/dev/null 2>&1
  fi
  if (git ls-files | fgrep package-lock.json > /dev/null) && [ -f package-lock.json ]; then
    if git ls-files | fgrep package-lock.json; then
      git add package-lock.json >/dev/null 2>&1
    fi
  fi

  if [ "$package" = "standard" ]; then
    npx standard --fix
    git add --update **/*.js
  fi

  echo -n "Committing ... "
  git commit --no-verify -m "$package@$latest" >/dev/null

  echo "Done."
done
